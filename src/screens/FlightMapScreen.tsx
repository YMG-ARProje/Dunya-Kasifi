import React from 'react';
import { StyleSheet, View } from 'react-native';
import MapView, { Marker } from 'react-native-maps';
import { useNavigation } from '@react-navigation/native';
import { NativeStackNavigationProp } from '@react-navigation/native-stack';
import { RootStackParamList } from '../navigation/types';

type NavigationProp = NativeStackNavigationProp<RootStackParamList, 'FlightMap'>;

const cities = [
  {
    name: 'Paris',
    latitude: 48.8566,
    longitude: 2.3522,
    flag: 'ðŸ‡«ðŸ‡·',
    landmark: 'Eyfel Kulesi',
    description: 'SanatÄ±n, modanÄ±n ve romantizmin baÅŸkenti Paris, Eyfel Kulesi, Louvre MÃ¼zesi ve Notre-Dame Katedrali gibi ikonik yapÄ±larÄ±yla dÃ¼nyaca Ã¼nlÃ¼dÃ¼r.'
  },
  {
    name: 'Roma',
    latitude: 41.9028,
    longitude: 12.4964,
    flag: 'ðŸ‡®ðŸ‡¹',
    landmark: 'Kolezyum',
    description: 'Antik Roma Ä°mparatorluÄŸu\'nun baÅŸkenti Roma, zengin tarihi, muhteÅŸem mimarisi ve lezzetli mutfaÄŸÄ±yla bÃ¼yÃ¼leyici bir ÅŸehirdir.'
  },
  {
    name: 'Londra',
    latitude: 51.5074,
    longitude: -0.1278,
    flag: 'ðŸ‡¬ðŸ‡§',
    landmark: 'Big Ben',
    description: 'Tarihi ve modern yaÅŸamÄ±n mÃ¼kemmel bir karÄ±ÅŸÄ±mÄ± olan Londra, Big Ben, Tower Bridge ve Buckingham SarayÄ± gibi Ã¶nemli yapÄ±larÄ±yla Ã¼nlÃ¼dÃ¼r.'
  },
  {
    name: 'Tokyo',
    latitude: 35.6762,
    longitude: 139.6503,
    flag: 'ðŸ‡¯ðŸ‡µ',
    landmark: 'Tokyo Kulesi',
    description: 'Geleneksel ve modern kÃ¼ltÃ¼rÃ¼n harmanlandÄ±ÄŸÄ± Tokyo, teknoloji, anime ve benzersiz sokak kÃ¼ltÃ¼rÃ¼yle dÃ¼nyaca tanÄ±nÄ±r.'
  },
  {
    name: 'Ä°stanbul',
    latitude: 41.0082,
    longitude: 28.9784,
    flag: 'ðŸ‡¹ðŸ‡·',
    landmark: 'Ayasofya',
    description: 'Asya ve Avrupa\'yÄ± birleÅŸtiren Ä°stanbul, Ayasofya, TopkapÄ± SarayÄ± ve KapalÄ±Ã§arÅŸÄ± gibi tarihi yapÄ±larÄ±yla iki kÄ±taya yayÄ±lan eÅŸsiz bir ÅŸehirdir.'
  },
];

const FlightMapScreen = () => {
  const navigation = useNavigation<NavigationProp>();

  return (
    <View style={styles.container}>
      <MapView
        style={styles.map}
        initialRegion={{
          latitude: 48.8566,
          longitude: 2.3522,
          latitudeDelta: 50,
          longitudeDelta: 50,
        }}
      >
        {cities.map((city) => (
          <Marker
            key={city.name}
            coordinate={{
              latitude: city.latitude,
              longitude: city.longitude,
            }}
            title={city.name}
            onPress={() => {
              navigation.navigate('CountryIntro', {
                country: {
                  name: city.name,
                  flag: city.flag,
                  landmark: city.landmark,
                  description: city.description
                }
              });
            }}
          />
        ))}
      </MapView>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
  },
  map: {
    flex: 1,
  },
});

export default FlightMapScreen; 